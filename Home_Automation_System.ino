#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/7f350771-277d-4e0d-a7ee-642b171c5de9 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  int fLAME;
  bool dOOR;
  bool gAS;
  bool lED;
  bool pIR;
  CloudTemperatureSensor tEMPERATURE;
  CloudRelativeHumidity hHUMIDITY;
  int wATER;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include "DHT.h"

#define DoorSensor 12
#define PIRSensor 27
#define ledLight 5
#define FlameSensor 34
#define GasSensor 14
#define WaterSensor 33
#define DHTPIN 13
#define DHTTYPE DHT11
DHT dht(DHTPIN,DHTTYPE);

void setup() {
  
  pinMode(DoorSensor,INPUT_PULLUP);
  pinMode(PIRSensor,INPUT);
  pinMode(ledLight,OUTPUT);
  pinMode(FlameSensor,INPUT);
  pinMode(GasSensor,INPUT);
  pinMode(WaterSensor,INPUT);
  pinMode(DHTPIN,INPUT);
  dht.begin();
  
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void DOOR_SENSOR_READ(){
  bool doorValue = digitalRead(DoorSensor);
  if(doorValue == HIGH){
    dOOR = LOW;
    Serial.println("Door is Opened");
  }
  else{
    dOOR = HIGH;
    Serial.println("Door is Closed");
  }
  delay(250);
}

void PIR_SENSOR_READ(){
  bool pirValue = digitalRead(PIRSensor);
  if(pirValue == HIGH){
    pIR = LOW;
    Serial.println("Motion is Detected");
  }
  else{
    pIR = HIGH;
    Serial.println("Motion is not Detected");
  }
  delay(250);
}

void FLAME_SENSOR_READ(){
  int flameValue = analogRead(FlameSensor);
  flameValue = map(flameValue, 0, 4095, 0, 180);
  fLAME = (flameValue - 180) * -1;
  if(flameValue <= 120){
    Serial.println("Fire is Detected");
  }
  else{
    Serial.println("Fire is Not Detected");
  }
  delay(250);
}

void GAS_SENSOR_READ(){
  bool gasValue = digitalRead(GasSensor);
  //gasValue = map(gasValue, 0, 4095, 0, 100); //When use analog readings
  if(gasValue == 0){
    gAS = HIGH; 
    Serial.println("Gas Leak is Not Detected!");
  }
  else{
    gAS = LOW;
    Serial.println("Gas Leak is Detected!");
  }
}

void WATER_SENSOR_READ(){
  int waterValue = analogRead(WaterSensor);
  waterValue = map(waterValue, 1000, 2500, 0, 100);
  wATER = waterValue;
  Serial.print("Water Level : ");
  Serial.println(waterValue);
  delay(100);
}

void TEMP_HUMI_SENSOR_READ(){
  float t = dht.readTemperature();
  tEMPERATURE = t;
  float h = dht.readHumidity();
  hUMIDITY = h;
  Serial.print("Temperature: "); Serial.println(t);
  Serial.print("Humidity: "); Serial.println(h);
  delay(500);
}

void onLEDChange()  {
  Serial.print("LED Status: ");
  Serial.println(lED);
  if(lED == HIGH){
    digitalWrite(ledLight,HIGH);
  }
  else{
    digitalWrite(ledLight,LOW);
  }
}

void loop() {
  ArduinoCloud.update();
  // Your code here
  DOOR_SENSOR_READ();
  PIR_SENSOR_READ();
  FLAME_SENSOR_READ();
  GAS_SENSOR_READ();
  onLEDChange();
  WATER_SENSOR_READ();
  TEMP_HUMI_SENSOR_READ();
}

/*
  Since WATER is READ_WRITE variable, onWATERChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onWATERChange()  {
  // Add your code here to act upon WATER change
}



